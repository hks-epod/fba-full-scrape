import dropbox
import zipfile
import smtplib
from email.MIMEMultipart import MIMEMultipart
from email.MIMEBase import MIMEBase
from email.MIMEText import MIMEText
from email.Utils import COMMASPACE, formatdate
from email import Encoders
import shutil
import os
import sys
import datetime
import json

with open('./secrets.json') as data_file:
        SECRETS = json.load(data_file)

USERNAME = SECRETS['email']['username']
PASSWORD = SECRETS['email']['password']
TOKEN = SECRETS['dropbox']['token']

date = sys.argv[1]
START_DATE = sys.argv[2]+" "+sys.argv[3]+" "+sys.argv[4]
END_DATE = datetime.date.today().strftime("%d %B %Y")

output_dir = os.getcwd()+'/full_output_'+date

SMTP_SERVER = 'smtp.gmail.com'
SMTP_PORT = 587

readme_txt = "{START_DATE}\r\n\r\nThis directory contains data on job cards and muster rolls scraped from the NREGA MIS between {START_DATE} and {END_DATE}.\r\n\r\nData from all job cards in FBA panchayats can be found in jobcard.csv.\r\n\r\nData from all muster rolls associated with these job cards can be found in the file muster.csv.\r\n\r\nAny inaccessible muster roll links can be found in the file failed_connections.csv. Muster roll links that could be accessed but contained empty tables (bad links) can be found in the file bad_mr_links.csv. Note that these files will only be generated if the script encountered inaccessible muster roll links or empty muster roll tables (respectively).\r\n\r\nA log of the scrape can be found in log.txt.\r\n\r\nPlease contact Eric Dodge (edodge11@gmail.com) for any questions regarding this data."

with open(output_dir+"/readme.txt", "w") as text_file:
    text_file.write(readme_txt.format(START_DATE=START_DATE,END_DATE=END_DATE))

def sendLog():
        sender = USERNAME
        recipients = ['edodge11@gmail.com','Arielle_Bernhardt@hks.harvard.edu','Charity_Troyer_Moore@hks.harvard.edu']
        subject = "FBA scrape completed for "+START_DATE+" (full scrape)"
        password = PASSWORD
        body = 'The zip file for the most recent full scrape of FBA panchayats has been uploaded to the Dropbox under FBA_MIS_scrapes. Details can be found in the attached log. Please direct any inquiries to Eric Dodge (edodge11@gmail.com).\r\n\r\nThis email was generated by a script.\r\n'
        body = "" + body + ""

        msg = MIMEMultipart()
        msg['Subject'] = subject
        msg['To'] = ','.join(recipients)
        msg['From'] = sender
        msg.attach(MIMEText(body))

        for f in [output_dir+"/log.txt"]:
                part = MIMEBase('application', "octet-stream")
                part.set_payload( open(f,"rb").read() )
                Encoders.encode_base64(part)
                part.add_header('Content-Disposition', 'attachment; filename="%s"' % os.path.basename(f))
                msg.attach(part)
 
        session = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
        session.ehlo()
        session.starttls()
        session.ehlo
        session.login(sender, password)

        session.sendmail(sender, recipients, msg.as_string())
        session.quit()

token = TOKEN
client = dropbox.client.DropboxClient(token)

def zipdir(path, zip):
	for root, dirs, files in os.walk(path):
	       for file in files:
			zip.write(os.path.join(root, file))

zipf = zipfile.ZipFile('full_output_'+date+'.zip', 'w', zipfile.ZIP_DEFLATED)
zipdir('full_output_'+date+'/', zipf)
zipf.close()

f = open(os.getcwd()+'/full_output_'+date+'.zip', 'rb')
response = client.put_file('/FBA_MIS_scrapes/full_output_'+date+'.zip', f)

sendLog()
# shutil.rmtree(output_dir)